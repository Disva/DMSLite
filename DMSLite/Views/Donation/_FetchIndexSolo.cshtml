@model IEnumerable<DMSLite.Entities.Donation>
<div class="divTableWrapper">
    <div class="divTable">
        <div class="tableRow header green">
            <div class="cell">
                Donation ID
            </div>
            <div class="cell">
                Donor
            </div>
            <div class="cell">
                Description
            </div>
            <div class="cell">
                @Html.DisplayNameFor(model => model.Value)
            </div>
            <div class="cell">
                Batch
            </div>
            <div class="cell">
                <!-- Left Empty for edit column -->
            </div>
            <div class="cell">
                <!-- Left Empty for delete column -->
            </div>
        </div>
        @foreach (var item in Model)
        {
            <div class="tableRow">
                <div class="cell">
                    @Html.DisplayFor(modelItem => item.Id)
                </div>
                <div class="cell">
                    @Html.DisplayFor(modelItem => item.DonationDonor.FirstName) @Html.DisplayFor(modelItem => item.DonationDonor.LastName)
                </div>
                <div class="cell">
                    @Html.DisplayFor(modelItem => item.ObjectDescription)
                </div>
                <div class="cell">
                    @Html.DisplayFor(modelItem => item.Value)
                </div>
                <div class="cell">
                    @Html.DisplayFor(modelItem => item.DonationBatch.Title)
                </div>
                @{ var buttonId = Guid.NewGuid().ToString(); }
                <div class="cell">
                @if (item.DonationBatch.CloseDate == null)
                {
                        @Ajax.ActionLink("✏", "ModifyFromDonation", "Donation", item, new AjaxOptions()
                {
                   InsertionMode = InsertionMode.InsertAfter,
                   UpdateTargetId = "outputContainer",
                   OnComplete = "enableButtonAndCheckSearch('" + buttonId + "')",
                   OnBegin = "return bounceInput('" + buttonId + "')"
               }, new { @class = "glyphicon pencil" })
                    }
                </div>
                <div class="cell">
                    @if (item.DonationBatch.CloseDate == null)
                {
                        @Ajax.ActionLink("", "ShowDeleteFromDonation", "Donation", item, new AjaxOptions()
               {
                   InsertionMode = InsertionMode.InsertAfter,
                   UpdateTargetId = "outputContainer",
                   OnComplete = "enableButtonAndCheckShowModal('" + buttonId + "')",
                   OnBegin = "return bounceInput('" + buttonId + "')"
               }, new { @class = "glyphicon remove" })
                    }
                </div>
            </div>
                    }
    </div>
</div>